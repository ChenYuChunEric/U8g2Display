#include <Arduino.h>
#include <U8g2lib.h>
#include "DHT.h"
#define DHTPIN D5     // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11   // DHT 11
DHT dht(DHTPIN, DHTTYPE);

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

// The complete list is available here: https://github.com/olikraus/u8g2/wiki/u8g2setupcpp

U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=12*/ D2, /* data=13*/ D1, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display

int button1 = D5;
int bitton2 = D6;
unsigned long int count = 0;

#define imgWidth 128
#define imgHeight 64

static const unsigned char PROGMEM logo_bmp[] =
{ 
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0XF0,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X18,0X06,0X00,0X00,0X00,
0X00,0X00,0X00,0X04,0X04,0X00,0X00,0X00,0X00,0X00,0X80,0X0F,0XFC,0X00,0X00,0X00,
0X00,0X00,0XE0,0X1B,0XCC,0X03,0X00,0X00,0X00,0X00,0X38,0XF0,0XED,0X0E,0X00,0X00,
0X00,0X00,0X0E,0X80,0XFF,0X39,0X00,0X00,0X00,0X00,0X03,0X00,0X08,0X63,0X00,0X00,
0X00,0X80,0X01,0X00,0X08,0XC2,0X00,0X00,0X00,0XC0,0X00,0X00,0X08,0X86,0X01,0X00,
0X00,0X40,0X00,0X00,0X18,0X06,0X01,0X00,0X00,0X60,0X00,0X00,0X10,0X06,0X03,0X00,
0X00,0X30,0X00,0X00,0X30,0X03,0X06,0X00,0X00,0X30,0X00,0X00,0XE0,0X03,0X04,0X00,
0X00,0X10,0X00,0X00,0X80,0X06,0X04,0X00,0X00,0X18,0X00,0X00,0X00,0X0F,0X0C,0X00,
0X00,0X18,0X00,0X00,0X80,0X19,0X08,0X00,0X00,0X08,0X00,0X00,0X80,0X30,0X08,0X00,
0X00,0X08,0X00,0X00,0X80,0X20,0X08,0X00,0X00,0X08,0X00,0X00,0X80,0X20,0X08,0X00,
0X00,0X08,0X00,0X00,0X80,0X30,0X08,0X00,0X00,0X1C,0X00,0X00,0X80,0X31,0X08,0X00,
0X00,0X06,0X00,0X00,0X00,0X19,0X08,0X00,0X00,0X03,0X00,0X00,0X00,0X0F,0X0C,0X00,
0X00,0X01,0X00,0X00,0X00,0X00,0X04,0X00,0X00,0X01,0X00,0X00,0X00,0X1E,0X06,0X00,
0X80,0X01,0X00,0X00,0X00,0X33,0X02,0X00,0X80,0X01,0X00,0X00,0X00,0X21,0X03,0X00,
0X80,0X01,0X00,0X00,0X00,0XE1,0X01,0X00,0X00,0X01,0X00,0X00,0X00,0XE1,0X00,0X00,
0X00,0X03,0X00,0X00,0X00,0X71,0X00,0X00,0X00,0X06,0X00,0X00,0X00,0X3F,0X00,0X00,
0X00,0X1C,0X18,0X00,0X00,0X1E,0X00,0X00,0X00,0XF8,0X0F,0X00,0X00,0X18,0X00,0X00,
0X00,0X04,0X8F,0X00,0X00,0X7E,0X00,0X00,0X00,0X08,0XC4,0X00,0X00,0X42,0X00,0X00,
0X00,0X09,0X46,0X00,0X00,0XC2,0X00,0X00,0X00,0X00,0X66,0X00,0X00,0X82,0X00,0X00,
0X00,0XF8,0X66,0X00,0X00,0X86,0X00,0X00,0X00,0X0F,0X67,0X00,0X00,0XCC,0X01,0X00,
0X80,0X03,0X66,0X00,0X00,0X78,0X1F,0X00,0X80,0X05,0X64,0X00,0X00,0X30,0X37,0X00,
0X00,0X01,0X6C,0X00,0X00,0X80,0X41,0X10,0X80,0X06,0X7C,0X00,0X00,0X80,0XC1,0X3F,
0X80,0X8A,0X17,0X00,0X00,0X00,0XC7,0X30,0X80,0XCA,0X06,0X00,0X00,0X00,0XFE,0X18,
0X00,0X0D,0X06,0X00,0X00,0X00,0X30,0X08,0X00,0X03,0X06,0X00,0X00,0X00,0X00,0X0C,
0X00,0XFC,0X1F,0X00,0X80,0X00,0X00,0X06,0X00,0X00,0XF0,0XFF,0XFF,0X07,0XC0,0X03,
0X00,0X00,0X80,0XEF,0X1F,0XFC,0XFF,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0X0F,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00, };

static const unsigned char PROGMEM logo_bmp1[] =
{ 
0XFF,0XFF,0X00,0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X1F,0X00,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X07,0X00,0X00,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X03,0XFC,0X07,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XC0,0XFF,0X3F,0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X7F,0XF0,0XFF,0XFF,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X3F,0XF8,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X1F,0XFC,0XFF,0XFF,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X0F,0XFE,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X0F,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X87,0XFF,0XFF,0XFF,0X1F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC3,0XFF,0XFF,0XFF,0X3F,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC3,0XFF,0XFF,0XFF,0X7B,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE1,0XF1,0XFF,0XFF,0X70,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE1,0XC3,0XFF,0X3F,0XF8,0XF8,0X7F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0XF1,0X07,0XFF,0X0F,0XFE,0XF8,0X7F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0XF1,0X1F,0XFC,0X83,0XFF,0XF0,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0XF0,0X7F,0XF8,0XE1,0XFF,0XF1,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0XF8,0X3F,0XF8,0XC1,0XFF,0XF1,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0XF8,0X0F,0XFC,0X07,0XFF,0XF1,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0XF8,0X83,0XFF,0X1F,0XF8,0XF1,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0XF8,0XE1,0XFF,0X7F,0XF0,0XF1,0X7F,0X7E,0XC0,0X03,0X0F,0XE0,0X00,0XC7,0X8F,0X3C,
0XF8,0XF9,0XFF,0XFF,0XF3,0XF1,0X7F,0X3E,0XC0,0X01,0X0C,0XC0,0X00,0XC4,0XC7,0X3C,
0XF8,0XFF,0XFF,0XFF,0XFF,0XF1,0X7F,0X1E,0XCE,0X30,0X8C,0XC7,0X38,0X8C,0XC7,0X3C,
0XF8,0XFF,0XFF,0XFF,0XFF,0XF1,0X7F,0X1E,0XFF,0X78,0X8C,0XC7,0X78,0X0C,0XC3,0X3C,
0XF0,0XFF,0XFF,0XFF,0XFF,0XF1,0X7F,0X1E,0XFE,0X78,0X8C,0XC7,0X78,0X1C,0XE3,0X3C,
0XF0,0XDF,0XF7,0X7D,0XFF,0X31,0X00,0X3E,0XFC,0X78,0X8C,0XC7,0X78,0X3C,0XF0,0X3C,
0XF1,0X8F,0XE3,0X38,0XFF,0X30,0X00,0X3E,0XF0,0X78,0X8C,0XC3,0X38,0X3C,0XF0,0X3C,
0XF1,0X8F,0X63,0X18,0XFE,0X78,0XFC,0X7F,0XC0,0X78,0X0C,0XE0,0X00,0X7E,0XF8,0X3C,
0XE1,0X07,0X41,0X10,0XFC,0XF8,0XF8,0XFF,0XC1,0X78,0X0C,0XF0,0X00,0X7F,0XF8,0X3C,
0XE1,0X23,0X08,0X02,0X7C,0XF8,0XE1,0XFF,0X87,0X78,0X8C,0XF1,0X18,0X7F,0XFC,0X3C,
0XC3,0X23,0X1C,0XC3,0X78,0XFC,0XC7,0XFF,0X8F,0X78,0X8C,0XE3,0X18,0X7E,0XFC,0X3C,
0XC3,0X73,0X1C,0XC7,0X39,0XFC,0X8F,0XFF,0X8F,0X78,0X8C,0XE3,0X38,0X7E,0XFC,0X3F,
0X87,0XFB,0XBE,0XEF,0X1F,0XFE,0X1F,0X1F,0X87,0X21,0X8C,0XC7,0X38,0X7C,0XFC,0X3C,
0X0F,0XFF,0XFF,0XFF,0X0F,0XFF,0X3F,0X1E,0XC0,0X01,0X8C,0X87,0X78,0X7C,0XFC,0X38,
0X0F,0XFF,0XFF,0XFF,0X0F,0XFF,0X7F,0X3E,0XE0,0X03,0X8F,0XCF,0X78,0X7C,0XFC,0X3C,
0X1F,0XFC,0X03,0XF8,0X83,0XFF,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0X3F,0XF8,0X00,0XF0,0XC1,0XFF,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0X3F,0XF0,0X00,0XF0,0XC0,0XFF,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0X1F,0XC0,0X18,0X31,0X80,0XFF,0X7F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,
0X1F,0X03,0X18,0X01,0X8C,0XFF,0X7F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X0F,0X07,0X18,0X01,0X0E,0XFF,0X7F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X8F,0X1F,0X18,0X81,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X8F,0X1F,0X18,0X83,0X1F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X87,0X07,0X1C,0X03,0X1C,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC7,0X00,0X1E,0X07,0X30,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC3,0X80,0X1F,0X3F,0X30,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XC3,0XE0,0X0F,0XFF,0X78,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE3,0XFF,0X07,0XFE,0X7F,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE3,0XFF,0X03,0XF8,0X7F,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE3,0XFF,0X40,0XF0,0X7F,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE1,0X7F,0XF0,0XC0,0X7F,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XE1,0X0F,0XF8,0X01,0XFE,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0X03,0XFC,0X07,0XF8,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0X00,0XFF,0X0F,0XF0,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0XE0,0XFF,0X7F,0XE0,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0XF9,0XFF,0XFF,0XF3,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0XFF,0XFF,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF1,0XFF,0XFF,0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF, };

static const unsigned char PROGMEM logo_bmp2[] =
{ 
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0XE0,0XFF,0X00,0X00,0X00,0X00,0X00,0X80,0XFF,0X01,0X00,0X00,0X00,
0X00,0X00,0X00,0XFF,0XFF,0X3F,0X00,0X00,0X00,0X00,0XFE,0XFF,0X7F,0X00,0X00,0X00,
0X00,0X00,0XF0,0XFF,0XFF,0XFF,0X01,0X00,0X00,0XE0,0XFF,0XFF,0XFF,0X07,0X00,0X00,
0X00,0X00,0XFE,0XFF,0XFF,0XFF,0X0F,0X00,0X00,0XFC,0XFF,0XFF,0XFF,0X1F,0X00,0X00,
0X00,0X80,0XFF,0XFF,0XFF,0XFF,0X3F,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0X00,
0X00,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0X00,
0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0X00,
0X00,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0X00,
0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0X00,
0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,
0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,
0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,
0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,
0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0X00,
0X00,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0X00,
0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0X00,
0X00,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0X00,
0X00,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0X00,
0X00,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0X00,0X00,
0X00,0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0X00,0X00,
0X00,0X00,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0X00,0X00,
0X00,0X00,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,0X00,0X00,
0X00,0X00,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,
0X00,0X00,0X00,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X3F,0X00,0X00,0X00,
0X00,0X00,0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0X00,0X00,0X00,
0X00,0X00,0X00,0XF0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0X00,0X00,0X00,
0X00,0X00,0X00,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X01,0X00,0X00,0X00,
0X00,0X00,0X00,0X80,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X1F,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0XE0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0XC0,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XFC,0XFF,0XFF,0XFF,0XFF,0X1F,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XF8,0XFF,0XFF,0XFF,0XFF,0X07,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XE0,0XFF,0XFF,0XFF,0XFF,0X01,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X80,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0X3F,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0XFC,0XFF,0XFF,0X0F,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0XF0,0XFF,0XFF,0X07,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0XFF,0XFF,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XFF,0X7F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XFE,0X3F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XF8,0X0F,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XF0,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00, };

void setup(void) {
  dht.begin();
  u8g2.begin();
  u8g2.enableUTF8Print();
  Serial.begin(115200);
  pinMode(D6,INPUT);
  pinMode(D7,INPUT);
}

void loop(void) {
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  Serial.println(t);
  Serial.println(h);

  String OutputH = String("H:") + h + "%";
  String OutputT = String("T:") + t + (char)223 +"C";
  
  if(digitalRead(D6) == HIGH){
    count++;
    Serial.println(count);
    delay(50);
  }
  if(digitalRead(D7) == HIGH){
    count--;
    Serial.println(count);
    delay(50);
  }
  if(count%4 == 0){
    u8g2.firstPage();
    do {
      u8g2.setFont(u8g2_font_unifont_t_chinese1);
      u8g2.setCursor(0, 16);
      u8g2.print("北鼻抱抱啾");
      u8g2.drawXBMP(64,32, imgWidth, imgHeight, logo_bmp);  //繪圖
    } while ( u8g2.nextPage() );
  }
  if(count%4 == 1){
    u8g2.firstPage();
    do {
      //u8g2.setCursor(0, 16);
      //u8g2.print("I am Sorry");
      u8g2.drawXBMP(0,4, imgWidth, imgHeight, logo_bmp1);  //繪圖
    } while ( u8g2.nextPage() );
  }
  if(count%4 == 2){
    u8g2.firstPage();
    do {
      //u8g2.setCursor(0, 16);
      //u8g2.print("愛心");
      u8g2.drawXBMP(0,4, imgWidth, imgHeight, logo_bmp2);  //繪圖
    } while ( u8g2.nextPage() );
  }
  if(count%4 == 3){
    //u8g2.firstPage();
    //do {
      u8g2.clearBuffer();          // clear the internal memory
      //u8g2.setFont(u8g2_font_unifont_t_chinese1);
      u8g2.setFont(u8g2_font_ncenB08_tr); // choose a suitable font
      //u8g2.drawStr(0,16,"我好帥123");  // write something to the internal memory
      u8g2.setCursor(0, 16);
      u8g2.print(OutputH);
      u8g2.setCursor(0, 32);
      u8g2.print(OutputT);
      u8g2.sendBuffer();          // transfer internal memory to the display
    //} while ( u8g2.nextPage() );
  }
}
